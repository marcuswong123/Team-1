#import necessary files
from pathlib import Path
import csv
#define coh function to process the csv data
def COH_function():
    #intitate empty lists to store the csv data and cash diff
    csvdata = []
    cashdiff = []
    #create file path to input csv and output summary_report.txt
    filepath = Path.cwd() / "csv_reports" / "cash-on-hand.csv"
    fp = Path.cwd() / "summary_report.txt"
    #open the CSV file in read mode and create CSV reader objects
    with filepath.open(mode="r", encoding="UTF-8", newline="") as file:
        csvreader = csv.reader(file)
        next(csvreader) #skip the header row
        #iterate through each row in csv file and store them as csvdata list 
        for row in csvreader:
            csvdata.append([float(row[0]), float(row[1])])
    #calculate the cash diff for each day 
    for day in range(1, len(csvdata)):
        diff = csvdata[day][1] - csvdata[day - 1][1]
        cashdiff.append(diff)
    #check if there is surplus in cash everyday 
    everydaysurplus = True
    for diff in cashdiff:
        if diff <= 0:
            everydaysurplus = False
            break
    #check if there is deficit in cash everyday
    everydaydeficit = True 
    for diff in cashdiff: 
        if diff >= 0:
            everydaydeficit = False
            break
    #if there is surplus everyday find day with highest cash surplus
    with fp.open(mode="a", encoding="UTF-8", newline="") as file:
        if everydaysurplus:
            highestsurplus = cashdiff[0]
            highestsurplusday = csvdata[1][0]
            for day, diff in enumerate(cashdiff, start=1):
                if diff > highestsurplus:
                    highestsurplus = diff
                    highestsurplusday = csvdata[day][0]
            #writes [CASH SURPLUS]LINE and highest cash surplus info to summary_report.txt
            file.write("[CASH SURPLUS] CASH ON EACH DAY IS HIGHER THAN PREVIOUS DAY\n")
            file.write(f'[HIGHEST CASH SURPLUS] DAY: {highestsurplusday}, AMOUNT: SGD{highestsurplus}\n')











